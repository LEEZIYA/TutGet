{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Constants } from './../../../utilities/constants';\nimport { ACADEMICLEVELSUBJECTLIST, ACADEMICLEVELIDLIST, ACADEMICSUBJECTIDLIST } from './../../../utilities/code-table/AcademicLevelSubjectList';\nimport { Component } from '@angular/core';\nimport { CreateListingForm } from 'src/app/DTO/CreateListingForm';\nlet CreateListingComponent = class CreateListingComponent {\n  constructor(restClient, listingService, utilitiesService) {\n    this.restClient = restClient;\n    this.listingService = listingService;\n    this.utilitiesService = utilitiesService;\n    this.createListingForm = new CreateListingForm();\n    this.academicLvlList = ACADEMICLEVELIDLIST;\n    this.academicSubjectList = ACADEMICSUBJECTIDLIST;\n    this.frequencyList = ['Weekly', 'Biweekly', 'Monthly'];\n    this.computedTotal = 0;\n    this.subjErr = '';\n    this.dateTimeErr = '';\n    this.startDtErr = '';\n    this.freqErr = '';\n    this.hourlyRateErr = '';\n    this.listingId = '';\n  }\n  ngOnInit() {\n    this.listingId = \"apedxs5siqsrh0wofgnle2cuv\";\n    this.initTableValue();\n    this.createListingForm.frequency = -1;\n    this.createListingForm.acadLvl = \"J1\";\n    //call userservice or get from localstorage after login to get user academic level\n    this.academicLvlLabel = this.academicLvlList.get(this.createListingForm.acadLvl);\n    // ACADEMICLEVELSUBJECTLIST.forEach((lvlSubj) => {\n    //   if(lvlSubj.acadLvlId === this.createListingForm.acadLvl){\n    //     this.academicLvlSubjectList = lvlSubj.acadSubjectIdList;\n    //   }\n    // })\n    this.academicLvlSubjectList = ACADEMICLEVELSUBJECTLIST.get(this.createListingForm.acadLvl);\n    this.createListingForm.postalCode = \"200640\";\n    //call userservice or get from localstorage after login to get user postal code\n    this.restClient.getrawjson(Constants.oneMapURLStart + this.createListingForm.postalCode + Constants.oneMapURLEnd).then(res => {\n      this.address = res.results[0].ADDRESS;\n    });\n  }\n  initTableValue() {\n    this.dayOfWeek = Array(7).fill(false);\n    this.selectedHour = Array(7).fill(0);\n    this.selectedMin = Array(7).fill('');\n    this.selectedAMPM = Array(7).fill(0);\n    this.selectedHourNum = Array(7).fill(0);\n    this.computedEndTimeArr = Array(7).fill('');\n    this.selected24Hour = Array(7).fill(0);\n    this.selectedMinNum = Array(7).fill(0);\n  }\n  computeEndTime(day) {\n    let selectedDay = this.dayOfWeek[day];\n    let hour = this.selectedHour[day];\n    let min = this.selectedMin[day];\n    let ampm = this.selectedAMPM[day];\n    let hourNum = this.selectedHourNum[day];\n    if (selectedDay && hour && min && ampm && hourNum) {\n      let min2 = Number(min);\n      let hour2 = Number(hour);\n      if (ampm == 2 && hour2 != 12) {\n        hour2 += 12;\n      } else if (ampm == 1 && hour2 == 12) {\n        hour2 = 24;\n      }\n      this.selected24Hour[day] = hour2;\n      this.selectedMinNum[day] = min2;\n      let startDate = new Date(2023, 8, 11, hour2, min2);\n      startDate.setTime(startDate.getTime() + Number(hourNum) * 60 * 60 * 1000);\n      this.computedEndTimeArr[day] = startDate.toLocaleTimeString([], {\n        timeStyle: 'short'\n      });\n      this.computeTotal();\n    } else {\n      if (!selectedDay) {\n        this.computedEndTimeArr[day] = '';\n        this.selectedHour[day] = 0;\n        this.selectedMin[day] = '';\n        this.selectedAMPM[day] = 0;\n        this.selectedHourNum[day] = 0;\n        this.selected24Hour[day] = 0;\n        this.selectedMinNum[day] = 0;\n      }\n    }\n  }\n  checkAll(type) {\n    if (type < 7) {\n      if (this.dayOfWeek[type]) {\n        this.checkAllSelect = true;\n      } else if (new Set(this.dayOfWeek).size == 1 && !this.dayOfWeek[type]) {\n        this.checkAllSelect = false;\n      }\n    } else {\n      if (this.checkAllSelect) {\n        this.dayOfWeek = Array(7).fill(true);\n      } else {\n        this.initTableValue();\n      }\n    }\n    this.computeTotal();\n  }\n  submit() {\n    this.clearError();\n    if (!this.validateForm()) {\n      this.createListingForm.postDate = new Date();\n      let dayOfWeekStr = '';\n      this.dayOfWeek.forEach(e => {\n        if (e) {\n          dayOfWeekStr += '1';\n        } else {\n          dayOfWeekStr += '0';\n        }\n      });\n      this.createListingForm.dayOfWeek = dayOfWeekStr;\n      this.createListingForm.hourlyRate = Number(this.hourlyRate);\n      this.createListingForm.description = this.createListingForm.description.trim();\n      this.createListingForm.selectedHour = this.selected24Hour;\n      this.createListingForm.selectedHourNum = this.selectedHourNum.join(\"\");\n      this.createListingForm.selectedMin = this.selectedMinNum;\n      this.listingService.createListing(this.createListingForm).then(res => {\n        this.listingId = res;\n      });\n    } else {\n      this.utilitiesService.scrollToTop();\n    }\n  }\n  computeTotal() {\n    if (new Set(this.computedEndTimeArr).size > 1 && this.createListingForm.frequency != -1 && !isNaN(this.hourlyRate)) {\n      this.showTotal = true;\n      let total = 0;\n      this.computedEndTimeArr.forEach((e, i) => {\n        if (e) {\n          total += this.selectedHourNum[i] * Number(this.hourlyRate);\n        }\n      });\n      this.computedTotal = total;\n    } else {\n      this.showTotal = false;\n    }\n  }\n  onKeyup(e) {\n    if (e.keyCode >= 48 && e.keyCode <= 57 || e.keyCode >= 96 && e.keyCode <= 105 && !isNaN(this.hourlyRate)) {\n      this.computeTotal();\n    } else {\n      this.showTotal = false;\n    }\n  }\n  validateForm() {\n    let hasErr = false;\n    if (!this.createListingForm.acadSubject) {\n      this.subjErr = 'Please select a subject';\n      hasErr = true;\n    }\n    if (new Set(this.computedEndTimeArr).size == 1) {\n      this.dateTimeErr = 'Please input all the required information on the above table';\n      hasErr = true;\n    }\n    this.dayOfWeek.forEach((e, i) => {\n      if (e) {\n        if (!this.computedEndTimeArr[i]) {\n          this.dateTimeErr = 'Please input all the required information on the above table';\n          hasErr = true;\n        }\n      }\n    });\n    if (this.createListingForm.startDate) {\n      let dateIndex = new Date(this.createListingForm.startDate).getDay();\n      if (dateIndex == 0) {\n        dateIndex = 6;\n      } else {\n        dateIndex -= 1;\n      }\n      if (!this.dayOfWeek[dateIndex]) {\n        this.startDtErr = 'Day of week do not match';\n        hasErr = true;\n      }\n      if (new Date(this.createListingForm.startDate) <= new Date()) {\n        this.startDtErr = 'Start date must be after today';\n        hasErr = true;\n      }\n    } else {\n      this.startDtErr = 'Please select the start date';\n      hasErr = true;\n    }\n    if (this.createListingForm.frequency == -1) {\n      this.freqErr = 'Please select a frequency';\n      hasErr = true;\n    }\n    if (!this.hourlyRate) {\n      this.hourlyRateErr = \"Please input an amount\";\n      hasErr = true;\n    } else {\n      if (isNaN(this.hourlyRate)) {\n        this.hourlyRateErr = \"Please input a valid number\";\n        hasErr = true;\n      }\n    }\n    return hasErr;\n  }\n  clearError() {\n    this.subjErr = '';\n    this.dateTimeErr = '';\n    this.startDtErr = '';\n    this.freqErr = '';\n    this.hourlyRateErr = '';\n  }\n};\nCreateListingComponent = __decorate([Component({\n  selector: 'app-create-listing',\n  templateUrl: './create-listing.component.html',\n  styleUrls: ['./create-listing.component.css']\n})], CreateListingComponent);\nexport { CreateListingComponent };","map":{"version":3,"mappings":"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","names":["Constants","ACADEMICLEVELSUBJECTLIST","ACADEMICLEVELIDLIST","ACADEMICSUBJECTIDLIST","Component","CreateListingForm","CreateListingComponent","constructor","restClient","listingService","utilitiesService","ngOnInit","listingId","initTableValue","createListingForm","frequency","acadLvl","academicLvlLabel","academicLvlList","get","academicLvlSubjectList","postalCode","getrawjson","oneMapURLStart","oneMapURLEnd","then","res","address","results","ADDRESS","dayOfWeek","Array","fill","selectedHour","selectedMin","selectedAMPM","selectedHourNum","computedEndTimeArr","selected24Hour","selectedMinNum","computeEndTime","day","selectedDay","hour","min","ampm","hourNum","min2","Number","hour2","startDate","Date","setTime","getTime","toLocaleTimeString","timeStyle","computeTotal","checkAll","type","checkAllSelect","Set","size","submit","clearError","validateForm","postDate","dayOfWeekStr","forEach","e","hourlyRate","description","trim","join","createListing","scrollToTop","isNaN","showTotal","total","i","computedTotal","onKeyup","keyCode","hasErr","acadSubject","subjErr","dateTimeErr","dateIndex","getDay","startDtErr","freqErr","hourlyRateErr","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Desktop\\TutGet\\APPS\\tutget-main\\tutget-ui\\src\\app\\components\\listing\\create-listing\\create-listing.component.ts"],"sourcesContent":["import { UtilitiesService } from './../../../services/utilities.service';\nimport { ListingService } from './../../../services/API/listing.service';\nimport { Constants } from './../../../utilities/constants';\nimport { ACADEMICLEVELSUBJECTLIST, ACADEMICLEVELIDLIST, ACADEMICSUBJECTIDLIST,  } from './../../../utilities/code-table/AcademicLevelSubjectList';\nimport { Component } from '@angular/core';\nimport { CreateListingForm } from 'src/app/DTO/CreateListingForm';\nimport { RestclientService } from 'src/app/services/restclient.service';\nimport { CodeTable } from 'src/app/utilities/code-table/CodeTable';\n\n\n@Component({\n  selector: 'app-create-listing',\n  templateUrl: './create-listing.component.html',\n  styleUrls: ['./create-listing.component.css']\n})\nexport class CreateListingComponent {\n\n  createListingForm: CreateListingForm = new CreateListingForm();\n  academicLvlList: Map<String, String> = ACADEMICLEVELIDLIST;\n  academicLvlSubjectList: string[] | undefined;\n  academicSubjectList: Map<String, String> = ACADEMICSUBJECTIDLIST;\n  academicLvlLabel: String | undefined;\n  address: string;\n  dayOfWeek: boolean[];\n  selectedHour: number[];\n  selectedMin: string[];\n  selectedMinNum: number[];\n  selectedAMPM: number[];\n  selectedHourNum: number[];\n  computedEndTimeArr: string[];\n  frequency: number;\n  checkAllSelect: boolean;\n  frequencyList = ['Weekly','Biweekly','Monthly'];\n  showTotal: boolean;\n  computedTotal: number = 0;\n  hourlyRate: number;\n  subjErr: string = '';\n  dateTimeErr: string = '';\n  startDtErr: string = '';\n  freqErr: string = '';\n  hourlyRateErr: string = '';\n  selected24Hour: number[];\n  listingId: string = '';\n\n\n\n  constructor(private restClient: RestclientService, private listingService: ListingService, private utilitiesService: UtilitiesService) {\n  }\n\n  ngOnInit(){\n    this.listingId = \"apedxs5siqsrh0wofgnle2cuv\";\n    this.initTableValue();\n    this.createListingForm.frequency = -1;\n\n\n    this.createListingForm.acadLvl = \"J1\";\n    //call userservice or get from localstorage after login to get user academic level\n    this.academicLvlLabel = this.academicLvlList.get(this.createListingForm.acadLvl);\n\n    // ACADEMICLEVELSUBJECTLIST.forEach((lvlSubj) => {\n    //   if(lvlSubj.acadLvlId === this.createListingForm.acadLvl){\n    //     this.academicLvlSubjectList = lvlSubj.acadSubjectIdList;\n    //   }\n    // })\n\n    this.academicLvlSubjectList = ACADEMICLEVELSUBJECTLIST.get(this.createListingForm.acadLvl);\n\n    this.createListingForm.postalCode = \"200640\";\n    //call userservice or get from localstorage after login to get user postal code\n\n    this.restClient.getrawjson(Constants.oneMapURLStart + this.createListingForm.postalCode + Constants.oneMapURLEnd)\n          .then((res) => {\n            this.address = res.results[0].ADDRESS;\n          })\n\n\n  }\n\n  initTableValue(){\n    this.dayOfWeek = Array(7).fill(false);\n    this.selectedHour = Array(7).fill(0);\n    this.selectedMin = Array(7).fill('');\n    this.selectedAMPM = Array(7).fill(0);\n    this.selectedHourNum = Array(7).fill(0);\n    this.computedEndTimeArr = Array(7).fill('');\n    this.selected24Hour = Array(7).fill(0);\n    this.selectedMinNum = Array(7).fill(0);\n  }\n\n\n\n  computeEndTime(day: number){\n\n    let selectedDay = this.dayOfWeek[day];\n    let hour = this.selectedHour[day];\n    let min = this.selectedMin[day];\n    let ampm = this.selectedAMPM[day];\n    let hourNum = this.selectedHourNum[day];\n\n\n    if(selectedDay && hour && min && ampm && hourNum){\n\n      let min2 = Number(min);\n      let hour2 = Number(hour);\n      if(ampm == 2 && hour2 != 12){\n        hour2 += 12;\n      } else if (ampm == 1 && hour2 == 12){\n        hour2 = 24;\n      }\n      this.selected24Hour[day] = hour2;\n      this.selectedMinNum[day] = min2;\n      let startDate = new Date(2023, 8, 11, hour2, min2);\n      startDate.setTime(startDate.getTime() + (Number(hourNum) * 60 * 60 * 1000));\n\n      this.computedEndTimeArr[day] = startDate.toLocaleTimeString([], {timeStyle: 'short'});\n      this.computeTotal();\n\n    } else {\n      if(!selectedDay){\n        this.computedEndTimeArr[day] = '';\n        this.selectedHour[day] = 0;\n        this.selectedMin[day] = '';\n        this.selectedAMPM[day] = 0;\n        this.selectedHourNum[day] = 0;\n        this.selected24Hour[day] = 0;\n        this.selectedMinNum[day] = 0;\n      }\n    }\n  }\n\n  checkAll(type: number){\n    if(type < 7){\n      if(this.dayOfWeek[type]){\n        this.checkAllSelect = true;\n      } else if (new Set(this.dayOfWeek).size == 1 && !this.dayOfWeek[type]){\n        this.checkAllSelect = false;\n      }\n    } else {\n      if(this.checkAllSelect){\n        this.dayOfWeek = Array(7).fill(true);\n      } else{\n        this.initTableValue();\n      }\n    }\n    this.computeTotal();\n  }\n\n  submit(){\n\n    this.clearError();\n\n    if(!this.validateForm()){\n      this.createListingForm.postDate = new Date();\n      let dayOfWeekStr = '';\n      this.dayOfWeek.forEach((e) => {\n        if(e){\n          dayOfWeekStr += '1';\n        } else {\n          dayOfWeekStr += '0';\n        }\n      });\n      this.createListingForm.dayOfWeek = dayOfWeekStr;\n      this.createListingForm.hourlyRate = Number(this.hourlyRate);\n      this.createListingForm.description = this.createListingForm.description.trim();\n      this.createListingForm.selectedHour = this.selected24Hour;\n      this.createListingForm.selectedHourNum = this.selectedHourNum.join(\"\");\n      this.createListingForm.selectedMin = this.selectedMinNum;\n\n\n      this.listingService.createListing(this.createListingForm)\n        .then((res) => {\n          this.listingId = res;\n        })\n\n\n    } else{\n      this.utilitiesService.scrollToTop();\n    }\n\n  }\n\n  computeTotal(){\n    if((new Set(this.computedEndTimeArr).size > 1) && (this.createListingForm.frequency != -1) && !isNaN(this.hourlyRate) ){\n        this.showTotal = true;\n        let total = 0;\n        this.computedEndTimeArr.forEach((e, i) => {if(e){total +=  this.selectedHourNum[i] * Number(this.hourlyRate)}})\n        this.computedTotal = total;\n    } else {\n      this.showTotal = false;\n    }\n  }\n\n  onKeyup(e: any){\n    if((e.keyCode >= 48 && e.keyCode <= 57) || (e.keyCode >= 96 && e.keyCode <= 105) && !isNaN(this.hourlyRate)){\n      this.computeTotal();\n    } else {\n      this.showTotal = false;\n    }\n  }\n\n  validateForm(){\n    let hasErr = false;\n    if(!this.createListingForm.acadSubject){\n      this.subjErr = 'Please select a subject';\n      hasErr = true;\n    }\n    if(new Set(this.computedEndTimeArr).size == 1){\n      this.dateTimeErr = 'Please input all the required information on the above table';\n      hasErr = true;\n    }\n\n    this.dayOfWeek.forEach((e, i) => {\n      if(e){\n        if(!this.computedEndTimeArr[i]){\n          this.dateTimeErr = 'Please input all the required information on the above table';\n          hasErr = true;\n        }\n      }\n    });\n\n    if(this.createListingForm.startDate){\n      let dateIndex = new Date(this.createListingForm.startDate).getDay();\n      if(dateIndex == 0){\n        dateIndex = 6;\n      } else {\n        dateIndex -= 1;\n      }\n      if(!this.dayOfWeek[dateIndex]){\n        this.startDtErr = 'Day of week do not match';\n        hasErr = true;\n      }\n      if(new Date(this.createListingForm.startDate) <= new Date()){\n        this.startDtErr = 'Start date must be after today';\n        hasErr = true;\n      }\n\n    } else {\n      this.startDtErr = 'Please select the start date';\n      hasErr = true;\n    }\n\n    if(this.createListingForm.frequency == -1){\n      this.freqErr = 'Please select a frequency';\n      hasErr = true;\n    }\n\n    if(!this.hourlyRate){\n      this.hourlyRateErr = \"Please input an amount\";\n      hasErr = true;\n    } else {\n      if(isNaN(this.hourlyRate)){\n        this.hourlyRateErr = \"Please input a valid number\";\n        hasErr = true;\n      }\n    }\n\n     return hasErr;\n\n  }\n\n  clearError(){\n    this.subjErr = '';\n    this.dateTimeErr = '';\n    this.startDtErr = '';\n    this.freqErr = '';\n    this.hourlyRateErr = '';\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}