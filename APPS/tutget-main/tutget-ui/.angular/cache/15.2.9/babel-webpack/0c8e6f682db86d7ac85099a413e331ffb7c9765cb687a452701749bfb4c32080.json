{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TableRowComponent_tr_2_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"S/N\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TableRowComponent_tr_2_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const headerName_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(headerName_r4);\n  }\n}\nfunction TableRowComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TableRowComponent_tr_2_th_1_Template, 2, 0, \"th\", 2);\n    i0.ɵɵtemplate(2, TableRowComponent_tr_2_th_2_Template, 2, 1, \"th\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.enableSerialNo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.objectHeaderName);\n  }\n}\nfunction TableRowComponent_tr_4_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r6 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n  }\n}\nfunction TableRowComponent_tr_4_td_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function TableRowComponent_tr_4_td_2_ng_container_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      const variable_r10 = ctx_r18.$implicit;\n      const j_r11 = ctx_r18.index;\n      const ctx_r17 = i0.ɵɵnextContext();\n      const i_r6 = ctx_r17.index;\n      const obj_r5 = ctx_r17.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      ctx_r15.preventDefault($event);\n      return i0.ɵɵresetView(ctx_r15.clickableColumnFuncArray[j_r11](i_r6, obj_r5[variable_r10]));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const variable_r10 = i0.ɵɵnextContext().$implicit;\n    const obj_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(obj_r5[variable_r10]);\n  }\n}\nfunction TableRowComponent_tr_4_td_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const variable_r10 = i0.ɵɵnextContext().$implicit;\n    const obj_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate1(\" \", obj_r5[variable_r10], \" \");\n  }\n}\nfunction TableRowComponent_tr_4_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, TableRowComponent_tr_4_td_2_ng_container_1_Template, 3, 1, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, TableRowComponent_tr_4_td_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r11 = ctx.index;\n    const _r13 = i0.ɵɵreference(3);\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.clickableColumn && ctx_r8.clickableColumnFuncArray[j_r11])(\"ngIfElse\", _r13);\n  }\n}\nfunction TableRowComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, TableRowComponent_tr_4_td_1_Template, 2, 1, \"td\", 2);\n    i0.ɵɵtemplate(2, TableRowComponent_tr_4_td_2_Template, 4, 2, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.enableSerialNo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.varToDisplay);\n  }\n}\nexport class TableRowComponent {\n  constructor() {\n    //Enable serial number on first column\n    this.enableSerialNo = false;\n    //Header names of the table\n    this.objectHeaderName = [];\n    //Object you wish to display\n    this.objectArray = null;\n    //Name of the variable in the object you wish to show\n    this.varToDisplay = [];\n    //For any col that requires clickable function\n    this.clickableColumn = null;\n    this.clickableColumnFuncArray = [];\n  }\n  ngOnInit() {\n    this.clickableColumnToArray();\n  }\n  clickableColumnToArray() {\n    if (this.clickableColumn) {\n      for (let i = 0; i < this.clickableColumn.length; i++) {\n        this.clickableColumnFuncArray[this.clickableColumn[i].columnNum] = this.clickableColumn[i].funcName;\n      }\n    }\n  }\n  preventDefault(e) {\n    e.preventDefault();\n  }\n}\n_class = TableRowComponent;\n_class.ɵfac = function TableRowComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-table-row\"]],\n  inputs: {\n    enableSerialNo: \"enableSerialNo\",\n    objectHeaderName: \"objectHeaderName\",\n    objectArray: \"objectArray\",\n    varToDisplay: \"varToDisplay\",\n    clickableColumn: \"clickableColumn\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[2, \"overflow\", \"auto\"], [\"width\", \"100%\", 1, \"table-bordered\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\", \"ngIfElse\"], [\"templateA\", \"\"], [\"href\", \"#\", 3, \"click\"]],\n  template: function TableRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n      i0.ɵɵtemplate(2, TableRowComponent_tr_2_Template, 3, 2, \"tr\", 2);\n      i0.ɵɵelementStart(3, \"tbody\");\n      i0.ɵɵtemplate(4, TableRowComponent_tr_4_Template, 3, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.objectHeaderName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.objectArray);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAGMA,0BAA2B;IAAAA,mBAAG;IAAAA,iBAAK;;;;;IACnCA,0BAAgD;IAAAA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;;;IAFlEA,0BAA6B;IAC3BA,qEAAmC;IACnCA,qEAAqE;IACvEA,iBAAK;;;;IAFEA,eAAoB;IAApBA,4CAAoB;IACEA,eAAmB;IAAnBA,iDAAmB;;;;;IAI5CA,0BAA2B;IAAAA,YAAW;IAAAA,iBAAK;;;;IAAhBA,eAAW;IAAXA,8BAAW;;;;;;IAEpCA,6BAAqF;IACjFA,4BAA4F;IAAhFA;MAAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAASC,8BAAsB;MAAA,OAAED,kFAA6C;IAAA,EAAC;IAACA,YAAmB;IAAAA,iBAAI;IACvHA,0BAAe;;;;;IADiFA,eAAmB;IAAnBA,0CAAmB;;;;;IAGjHA,YACF;;;;;IADEA,qDACF;;;;;IANFA,0BAA0D;IACxDA,8FAEe;IACfA,6HAEc;IAChBA,iBAAK;;;;;;IANYA,eAAsD;IAAtDA,uFAAsD;;;;;IAHzEA,0BAAmD;IACjDA,qEAA2C;IAC3CA,qEAOK;IACPA,iBAAK;;;;IATEA,eAAoB;IAApBA,4CAAoB;IACAA,eAAiB;IAAjBA,6CAAiB;;;ACFlD,OAAM,MAAOE,iBAAiB;EAwB5BC;IAtBA;IAEA,mBAAc,GAAY,KAAK;IAE/B;IAEA,qBAAgB,GAAa,EAAE;IAE/B;IAEA,gBAAW,GAAe,IAAI;IAE9B;IAEA,iBAAY,GAAa,EAAE;IAE3B;IAEA,oBAAe,GAAkF,IAAI;IAErG,6BAAwB,GAAQ,EAAE;EAElB;EAEhBC,QAAQ;IACN,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEAA,sBAAsB;IACpB,IAAG,IAAI,CAACC,eAAe,EAAC;MACtB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;QAClD,IAAI,CAACE,wBAAwB,CAAC,IAAI,CAACH,eAAe,CAACC,CAAC,CAAC,CAACG,SAAS,CAAC,GAAG,IAAI,CAACJ,eAAe,CAACC,CAAC,CAAC,CAACI,QAAQ;;;EAGzG;EAEAC,cAAc,CAACC,CAAQ;IACrBA,CAAC,CAACD,cAAc,EAAE;EACpB;;SAxCWV,iBAAiB;;mBAAjBA,MAAiB;AAAA;;QAAjBA,MAAiB;EAAAY;EAAAC;IAAAC;IAAAC;IAAAC;IAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MDP9BvB,8BAA4B;MAExBA,gEAGK;MACLA,6BAAO;MACLA,gEAUK;MACPA,iBAAQ;;;MAhBHA,eAAsB;MAAtBA,2CAAsB;MAKLA,eAAgB;MAAhBA,yCAAgB","names":["i0","ctx_r15","TableRowComponent","constructor","ngOnInit","clickableColumnToArray","clickableColumn","i","length","clickableColumnFuncArray","columnNum","funcName","preventDefault","e","selectors","inputs","enableSerialNo","objectHeaderName","objectArray","varToDisplay","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Desktop\\TutGet\\APPS\\tutget-main\\tutget-ui\\src\\app\\utilities\\table-row\\table-row.component.html","D:\\Desktop\\TutGet\\APPS\\tutget-main\\tutget-ui\\src\\app\\utilities\\table-row\\table-row.component.ts"],"sourcesContent":["<div style=\"overflow: auto\">\n  <table class=\"table-bordered\" width=\"100%\">\n    <tr *ngIf=\"objectHeaderName\">\n      <th *ngIf=\"enableSerialNo\">S/N</th>\n      <th *ngFor=\"let headerName of objectHeaderName\">{{ headerName }}</th>\n    </tr>\n    <tbody>\n      <tr *ngFor=\"let obj of objectArray; let i = index\">\n        <td *ngIf=\"enableSerialNo\">{{ i + 1 }}</td>\n        <td *ngFor=\"let variable of varToDisplay; let j = index;\">\n          <ng-container *ngIf=\"clickableColumn && clickableColumnFuncArray[j]; else templateA\">\n              <a href=\"#\" (click)=\"preventDefault($event); clickableColumnFuncArray[j](i, obj[variable])\">{{ obj[variable] }}</a>\n          </ng-container>\n          <ng-template #templateA>\n            {{ obj[variable]}}\n          </ng-template>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-table-row',\n  templateUrl: './table-row.component.html',\n  styleUrls: ['./table-row.component.css']\n})\nexport class TableRowComponent implements OnInit {\n\n  //Enable serial number on first column\n  @Input()\n  enableSerialNo: boolean = false;\n\n  //Header names of the table\n  @Input()\n  objectHeaderName: string[] = [];\n\n  //Object you wish to display\n  @Input()\n  objectArray: any | null = null;\n\n  //Name of the variable in the object you wish to show\n  @Input()\n  varToDisplay: string[] = [];\n\n  //For any col that requires clickable function\n  @Input()\n  clickableColumn: { funcName: (index: number, args: any) => void; columnNum: number; }[] | null = null;\n\n  clickableColumnFuncArray: any = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.clickableColumnToArray();\n  }\n\n  clickableColumnToArray(){\n    if(this.clickableColumn){\n      for(let i = 0; i < this.clickableColumn.length; i++){\n        this.clickableColumnFuncArray[this.clickableColumn[i].columnNum] = this.clickableColumn[i].funcName;\n      }\n    }\n  }\n\n  preventDefault(e: Event){\n    e.preventDefault();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}