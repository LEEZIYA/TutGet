{"ast":null,"code":"import _asyncToGenerator from \"D:/Desktop/TutGet/APPS/tutget-main/tutget-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestclientService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = '/api';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // Accept: 'application/json',\n        // 'Access-Control-Allow-Headers': 'Content-Type'\n      })\n    };\n  }\n\n  getrawjson(url) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this.http.get(url)).catch(err => {\n        console.log(err);\n      });\n    })();\n  }\n  postjson(url, rawdata) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let data = JSON.stringify(rawdata);\n      return yield firstValueFrom(_this2.http.post(_this2.BASE_URL + url, data)).catch(err => {\n        console.log(err);\n      });\n    })();\n  }\n}\n_class = RestclientService;\n_class.ɵfac = function RestclientService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,cAAc,QAAQ,MAAM;;;AAKrC,OAAM,MAAOC,iBAAiB;EAa5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAXxB,aAAQ,GAAW,MAAM;IAEzB,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QACvB,cAAc,EAAE;QAChB;QACA;OACD;KAEF;EAEuC;;EAElCM,UAAU,CAACC,GAAW;IAAA;IAAA;MAC1B,aAAaN,cAAc,CAAC,KAAI,CAACG,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC,CAAC,CAC9CE,KAAK,CAAEC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IAAC;EACL;EAGMG,QAAQ,CAACN,GAAW,EAAEO,OAAY;IAAA;IAAA;MACtC,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;MAClC,aAAab,cAAc,CAAC,MAAI,CAACG,IAAI,CAACc,IAAI,CAAC,MAAI,CAACC,QAAQ,GAAGZ,GAAG,EAAEQ,IAAI,CAAC,CAAC,CACrEN,KAAK,CAAEC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IAAC;EACL;;SA7BWR,iBAAiB;;mBAAjBA,MAAiB;AAAA;;SAAjBA,MAAiB;EAAAkB,SAAjBlB,MAAiB;EAAAmB,YAFhB;AAAM","names":["HttpHeaders","firstValueFrom","RestclientService","constructor","http","headers","getrawjson","url","get","catch","err","console","log","postjson","rawdata","data","JSON","stringify","post","BASE_URL","factory","providedIn"],"sourceRoot":"","sources":["D:\\Desktop\\TutGet\\APPS\\tutget-main\\tutget-ui\\src\\app\\services\\restclient.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestclientService {\n\n  BASE_URL: string = '/api'\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // Accept: 'application/json',\n      // 'Access-Control-Allow-Headers': 'Content-Type'\n    }\n    )\n  };\n\n  constructor(private http: HttpClient) { }\n\n  async getrawjson(url: string): Promise<any>{\n    return await firstValueFrom(this.http.get(url))\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n  async postjson(url: string, rawdata: any): Promise<any>{\n    let data = JSON.stringify(rawdata);\n    return await firstValueFrom(this.http.post(this.BASE_URL + url, data))\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}